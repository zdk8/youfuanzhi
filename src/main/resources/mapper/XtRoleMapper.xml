<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.hvit.workspace.dao.XtRoleMapper" >
  <resultMap id="BaseResultMap" type="cn.com.hvit.workspace.model.XtRole" >
    <id column="ROLEID" property="roleid" jdbcType="DECIMAL" />
    <result column="ROLEDESC" property="roledesc" jdbcType="VARCHAR" />
    <result column="PARENT" property="parent" jdbcType="VARCHAR" />
    <result column="OWNER" property="owner" jdbcType="VARCHAR" />
    <result column="ROLENAME" property="rolename" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
    <result column="CREATEDATE" property="createdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ROLEID, ROLEDESC, PARENT, OWNER, ROLENAME, STATUS, CREATEDATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from XT_ROLE
    where ROLEID = #{roleid,jdbcType=DECIMAL}
  </select>

    <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from XT_ROLE
  </select>
  <select id="selectPrivilegesByUserIdAndRoleNameFilter" parameterType="map" resultType="map">
    select r.*,ru.userid from xt_role r left join (select * from xt_roleuser where userid=#{userid})
    ru on r.roleid=ru.roleid
  </select>
<select id="selectPrivilegesByRole" parameterType="map" resultType="map">
  select rf.roleid checked,t.functionid id,t.title text,t.location value,t.*, (select (decode(count(1),0,'true','false'))
  from xt_function where parent=t.functionid) leaf
  from xt_function t left join (select * from xt_rolefunc where roleid = #{roleid}) rf on t.functionid = rf.functionid
  where t.parent = #{functionid} order by t.orderno asc
</select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from XT_ROLE
    where ROLEID = #{roleid,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="cn.com.hvit.workspace.model.XtRole" >
<selectKey  resultType="int" order="BEFORE" keyProperty="roleid">
          select SEQ_XT_ROLE.nextval from dual
    </selectKey>
    insert into XT_ROLE (ROLEID, ROLEDESC, PARENT, 
      OWNER, ROLENAME, STATUS, 
      CREATEDATE)
    values (#{roleid,jdbcType=DECIMAL}, #{roledesc,jdbcType=VARCHAR}, #{parent,jdbcType=VARCHAR}, 
      #{owner,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{createdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.hvit.workspace.model.XtRole" >
    insert into XT_ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        ROLEID,
      </if>
      <if test="roledesc != null" >
        ROLEDESC,
      </if>
      <if test="parent != null" >
        PARENT,
      </if>
      <if test="owner != null" >
        OWNER,
      </if>
      <if test="rolename != null" >
        ROLENAME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createdate != null" >
        CREATEDATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        #{roleid,jdbcType=DECIMAL},
      </if>
      <if test="roledesc != null" >
        #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="parent != null" >
        #{parent,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.hvit.workspace.model.XtRole" >
    update XT_ROLE
    <set >
      <if test="roledesc != null" >
        ROLEDESC = #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="parent != null" >
        PARENT = #{parent,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        OWNER = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        ROLENAME = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="createdate != null" >
        CREATEDATE = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ROLEID = #{roleid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.hvit.workspace.model.XtRole" >
    update XT_ROLE
    set ROLEDESC = #{roledesc,jdbcType=VARCHAR},
      PARENT = #{parent,jdbcType=VARCHAR},
      OWNER = #{owner,jdbcType=VARCHAR},
      ROLENAME = #{rolename,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      CREATEDATE = #{createdate,jdbcType=TIMESTAMP}
    where ROLEID = #{roleid,jdbcType=DECIMAL}
  </update>
</mapper>